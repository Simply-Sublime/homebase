# This is an example resource file for rTorrent. Copy to
# ~/.rtorrent.rc and enable/modify the options as needed. Remember to
# uncomment the options you wish to enable.

scgi_port = localhost:5050

# Maximum and minimum number of peers to connect to per torrent.
min_peers = 50
max_peers = 80

# Same as above but for seeding completed torrents (-1 = same as downloading)
min_peers_seed = 1
max_peers_seed = 50

# Maximum number of uploads single torrent may use
max_uploads = 4

# Maximum number of simultaneous downloads
max_downloads_global = 10
# Maximum number of simultaneous uploads
max_uploads_global = 5

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 0
upload_rate = 50

view_sort_current = active,greater=d.get_up_rate=
schedule = filter_active,12,20,"view_filter = active,\"or={d.get_down_rate=}\" ;view_sort=active"

# Default directory to save the downloaded torrents.
directory = ~/Downloads/Torrents/Complete

# default path for in progress downloads
directory = ~/Downloads/Torrents/Incomplete

schedule = watch_directory_1,10,10,"load.start=~/Downloads/Torrents/Watch/*.torrent,d.set_custom1=~/Downloads/Torrents/Complete"

# upon completion, move content to path specified above via custom1
method.insert = d.get_data_full_path, simple, "branch=((d.is_multi_file)),((cat,(d.directory))),((cat,(d.directory),/,(d.name)))"
method.insert = d.move_to_complete, simple, "execute=mkdir,-p,$argument.1=; execute=cp,-rp,$argument.0=,$argument.1=; d.stop=; d.directory.set=$argument.1=; d.start=;d.save_full_session=; execute=rm, -r, $argument.0="
method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.get_data_full_path=,$d.custom1="

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = ~/Downloads/Torrents/.rtorrent.session

# Close torrents when diskspace is low.
schedule = low_diskspace,5,60,close_low_diskspace=2000M

# Periodically save session data
schedule = session_save,240,300,session_save=

# Enable the default ratio group.
ratio.enable=

# Change the limits, the defaults should be sufficient.
# Upload to a minimum ratio of 4.0
#ratio.min.set=4.0
# Upload to a maximum ratio of 20.0
#ratio.max.set=20.0
# Upload a minimum of 250 MB
#ratio.upload.set=250M

# When seeding ratio is reached close the torrent
system.method.set = group.seeding.ratio.command, d.close=

# Port range to use for listening.
port_range = 6881-6882

# Start opening ports at a random position within the port range.
port_random = yes

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
encryption = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Sort the seeding view by the upload rate
view_sort_current = seeding,greater=d.get_up_rate=
view_sort_new = seeding,greater=d.get_up_rate=
schedule = sort,5,2,view_sort=seeding

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
# 
dht_port = 6883

# Enable peer exchange (for torrents not marked private)
#
#peer_exchange = yes

color_inactive_fg = 4
color_dead_fg = 1
color_active_fg = 3
color_finished_fg = 7

system.method.set_key = event.download.finished,time_stamp, \
    "d.set_custom=tm_completed,$cat=$system.time= ;d.save_session="

